rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isStaff() {
      return isAuthenticated() &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role in ['admin', 'staff'];
    }

    // CSV uploads for bank matching
    match /csv-uploads/{userId}/{fileName} {
      allow read: if isStaff();
      allow write: if isStaff() &&
        request.resource.size < 10 * 1024 * 1024 && // 10MB limit
        request.resource.contentType.matches('text/csv');
    }

    // Invoice PDFs
    match /invoices/{invoiceId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isStaff() &&
        request.resource.size < 5 * 1024 * 1024 && // 5MB limit
        request.resource.contentType == 'application/pdf';
    }

    // Temporary uploads
    match /temp/{userId}/{fileName} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId &&
        request.resource.size < 10 * 1024 * 1024; // 10MB limit
    }
  }
}
